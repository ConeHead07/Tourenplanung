<?php 
$this->layout()->disableLayout();
$r = Zend_Controller_Front::getInstance()->getResponse();
$r->setHeader('Content-Type', 'text/html; charset=UTF-8', true);
$data = $this->vorgangsbemerkungen->data;

$controllerUrl = $this->vorgangsbemerkungen->controllerUrl;

?><style>
    div#boxBemerkungen .headBemerkungen{
        font-weight:bold;
        padding:4px 3px 4px 0;
        border-bottom:2px solid #d2d2d2;
        margin-bottom: 5px;
    }
    div#boxBemerkungen,
    div#boxBemerkungen * {
        font-weight:normal;
    }
    div#boxBemerkungen div.entry {
        border-bottom:1px solid #d2d2d2;
        padding-bottom:10px;
        margin-bottom: 5px;
    }
    div#boxBemerkungen div.entry div.bemerkung-meta {
        font-style: italic;
        color:#0f0f0f;
    }

    form[name=frmBemerkungen] input[type=date],
    form[name=frmBemerkungen] input[type=text]{
        border-left:0;
        border-right:0;
        border-top:0;
        padding-left:0.2em;
        padding-right:0.2em;
        border-bottom:2px solid #a1c9fd;
        background-color:rgba(161,201,253,.1);
    }
</style>
<?php 

if (property_exists($this->vorgangsbemerkungen, 'error')) {
    echo $this->vorgangsbemerkungen->error . "<br>\n";
}

if ($data) {
    $tour_id = $data['tour_id'];
    $action  = $this->vorgangsbemerkungen->action;
    $controllerUrl = $this->vorgangsbemerkungen->controllerUrl;
    $avisiertChecked = ($data['avisiert'] ? ' checked="checked"' : '');
    $avisiertZeitgenauChecked = ($data['avisiertZeitgenau'] ? ' checked="checked"' : '');
    $attachesChecked = ($data['attachments'] ? ' checked="checked"' : '');

    $avisiertDatum = $data['avisiertDatum'] ?: $data['DatumVon'];
    $avisiertZeitVon = substr($data['avisiertZeitVon'] ?: $data['ZeitVon'], 0, 5);
    $avisiertZeitBis = substr($data['avisiertZeitBis'] ?: $data['ZeitBis'], 0, 5);
    
    echo '<fieldset><legend>Bemerkungen</legend>';

    echo '<form name="frmBemerkungen" rel="'.$controllerUrl.'/updatetourbemerkungen" id="frmPrint" style="margin:0;display:inline">';
    echo '<div id="boxBemerkungen">';    
    echo '<div>';
    echo '<div class="headBemerkungen">Avisiert:</div>';

    echo '<input type="checkbox" id="checkAvisiert" name="avisiert" value="1"'
        . $avisiertChecked . '/>';

    echo '<label for="checkAvisiert">Termin wurde mit dem Kunden abgesprochen</label><br>' . PHP_EOL;
    echo '<div id="avisiertDetailBox" style="padding-left:1.8rem">' . "\n";
    echo ' Datum: <input type="text" name="avisiertDatum" size="10" value="'
        . $avisiertDatum . '"/> ' . PHP_EOL;

    echo ' <label for="checkAvisiertZeitgenau">'
        . '<input type="checkbox" id="checkAvisiertZeitgenau" '
        . 'style="width:.8em;height:.8em;margin-right:.15em" name="avisiertZeitgenau" value="1"'
        . $avisiertZeitgenauChecked . '">'
        . 'Tageszeit:</label> ';

    echo '<span id="avisiertTageszeitBox">'
        . '<input type="text" name="avisiertZeitVon" size="5" placeholder="08:00" value="'
        . $avisiertZeitVon . '"/>';

    echo ' bis <input type="text" name="avisiertZeitBis" size="5" placeholder="11:30" value="'
        . $avisiertZeitBis . '"/>'
        . '</span>' . PHP_EOL;

    echo '</div>' . "\n";

    echo '<input type="checkbox" name="attachments" value="1"' . $attachesChecked . '/>';
    echo 'Pl√§ne vorhanden';
    echo '</div>';

    if ($data['bemerkung_json']) {
        echo '<div class="headBemerkungen" src="json" style="margin-top:15px;">Bisherige Bemerkungen:</div>';

        $bList= json_decode( $data['bemerkung_json'] );
        if (json_last_error()) {
        } else {

            foreach($bList as $_bem) {
                if (!empty($_bem->removed)) {
                    continue;
                }
                $_id = $_bem->id ?? '';
                $_pr = $_bem->print ?? '';
                $_us = $_bem->user ?? '';
                $_ts = $_bem->datetime ?? '';
                $_bm = $_bem->bemerkung ?? '';
                $_removable = $this->userName == $_us ? ' removable' : '';

                echo '<div class="entry" src="json" id="' . $_id . '" print="' . $_pr . '">' . "\n"
                    .'<div class="bemerkung-meta' . $_removable. '">' . "\n"
                    .'<span class="user">' . $_us . '</span>, <span class="datetime">' . $_ts . '</span>' . "\n"
                    .'</div>' . "\n"
	                .'<div class="bemerkung">' . $_bm . '</div>' . "\n"
                    .'</div>';
            }
        }
    }
    elseif ( $data['bemerkung']) {
        echo '<div class="headBemerkungen" src="xml" style="margin-top:15px;">Bisherige Bemerkungen:</div>';
        $xmlIdentifier = strtolower(substr(trim($data['bemerkung']), 0, 5));
        if ('<?xml' != $xmlIdentifier) {
            echo nl2br($this->vorgangsbemerkungen->data['bemerkung']);
        } else {
            $xml = simplexml_load_string( $data['bemerkung'] );
            $result = $xml->xpath('//div[@class="entry"]');
            foreach($result as $_ => $node) {
                echo $node->asXML();
            }
        }
    } else {
        echo '<div class="headBemerkungen">Es liegen keine Bemerkungen vor!</div>';
    }
    echo '</div>'
        .'<input type="hidden" name="tour_id" value="'.$tour_id.'">';
    echo '</form>';
    echo '</fieldset>';
    
    echo '<fieldset style="margin-top:25px;"><legend>Bemerkung hinzuf&uuml;gen</legend>';
    echo '<form rel="'.$controllerUrl.'/inserttourbemerkung" id="frmBemerkung" style="margin:0;display:inline">';
    echo '<textarea name="bemerkung" id="txtBemerkung" style="width:100%"></textarea>'
        .'<button id="sendBemerkung">Bemerkung hinzufuegen</button>'
        .'<input type="hidden" name="tour_id" value="'.$tour_id.'">'
        .'</form>';
    echo '</fieldset>';
}
?>
<script>
$("button#sendBemerkung").click(function(e) {
    e.preventDefault();
    var tour_id = $( this ).closest("form").find("input[name=tour_id]").val();

    $.post( 
        $("form#frmBemerkung").attr('rel'), 
        $("form#frmBemerkung").serialize(), 
        function(data) {

            var url = "<?= $controllerUrl; ?>";
            url+= '/vorgangsbemerkungensaved/tour_id/' + tour_id;

            $("div#boxBemerkungen").load( url );
            $("#txtBemerkung").val('');
            Fb.RenderBemerkungenPrintFlag();
        });
});

if (!Fb) Fb = {};

Fb.RenderBemerkungenPrintFlag = function() {

    $("#checkAvisiertZeitgenau")
        .unbind("change")
        .bind("change", function() {
            $("#avisiertTageszeitBox").toggle( this.checked );
        })
        .trigger("change");

    $("#checkAvisiert")
        .unbind("change")
        .bind("change", function() {
            $("#avisiertDetailBox").toggle( this.checked);
            return;
        })
        .trigger("change");

    console.log("vorgangsbemerkungen.phtml");
    $("div.entry", "#boxBemerkungen").each(function() {
        if ($("div.bemerkung-meta", this).find(".ui-icon-print").length) {
            return;
        }

        var self = this;

        var p = $(this).attr('print');
        var id = $(this).attr("id");

        var hiddenElm = $("<input type='hidden' name='attr["+id+"][print]' value='0' />");

        var chckPrintElm = $("<input type='checkbox' name='attr["+id+"][print]' value='1' />")
            .css("margin-right", "-0.15em")
            .attr({checked:(p==1)});

        var printIcon =
            $("<span class='ui-icon ui-icon-print'/>")
                .css("display", "inline-block")
                .bind("click", function() {
                        $(this).prev().attr( {checked: !$(this).prev().attr('checked') });
                    }
                );


        $("div.bemerkung-meta", this).prepend( hiddenElm );
        hiddenElm.after( chckPrintElm );
        chckPrintElm.after( printIcon );

        if ($("div.bemerkung-meta", this).is(".removable")) {

            var chckRemoveElm = $("<input type='checkbox' name='attr[" + id + "][remove]' value='1' />")
                .css("margin-right", "-0.15em")
                .attr({checked: false});

            var removeIcon =
                $("<span class='ui-icon ui-icon-trash'/>")
                    .css("display", "inline-block")
                    .bind("click", function () {
                            $(this).prev().attr({checked: !$(this).prev().attr('checked')});
                        }
                    );

            printIcon.after( chckRemoveElm );
            chckRemoveElm.after( removeIcon );
        }
    });
    
    $("#boxBemerkungen").append(
        $('<input type="button" name="savePrintFlags" value="speichern" />').click(function() {
//            alert( $("form#frmPrint").serialize() );
            var tour_id = $( this ).closest("form").find("input[name=tour_id]").val();
            var url = "<?= $controllerUrl; ?>";
            url+= '/vorgangsbemerkungensaved/tour_id/' + tour_id;

            $.post( 
                $("form#frmPrint").attr('rel'), 
                $("form#frmPrint").serialize(), 
                function(data) {
                    $.toast('Aktualisiert!');
                    $("div#boxBemerkungen").load( url );
                }
            );
        })
    );
}
Fb.RenderBemerkungenPrintFlag();
</script>

<script>
var XFb = {
 listbox: "#attachments_list",
 uploadFinished: function(o){ 
  XFb.showLoadingBar(0);
  if (arguments.length && typeof(arguments[0])=="object") {
   var m = "";
   if ("msg" in o && o.msg) m= o.msg + "\n";
   if ("error" in o && o.error) m+= o.error;
   if ( $("#upload-message").length) {
     $("#upload-message").text(m);
   }
   else if ("error" in o && o.error) alert(o.error);
  }
  XFb.reloadAttachments();
 },
 reloadAttachments: function() {
  var $a = $(XFb.listbox);
  XFb.queryAttachments($a.attr("data-query") );
 }, queryAttachments: function(query) {
  var $a = $(XFb.listbox);
  XFb.showLoadingBar(1);
  $a.load( $a.attr("data-baseurl") + query, function() {
   XFb.bindListEvents();
   XFb.showLoadingBar(0);
  });
 },
 bindListEvents: function() {
  var $a = $(XFb.listbox);
  $a.find("thead a").click(function(e) {
   e.preventDefault();
   $a.attr("data-query", $(this).attr("data-query") );
   XFb.queryAttachments( $(this).attr("data-query") );
  });
  $a.find("tbody a.list-action").click(function(e) {
   e.preventDefault();
   $.getJSON( $(this).attr("href"), function(data) {
    if (arguments.length && typeof(arguments[0])=="object") {
     var m = "";
     if ( "msg" in data && data.msg ) m+= data.msg + "\n";
     if ( "error" in data && data.error) m+= data.error + "\n";
     if ( m ) {
         if ( $("#attachments-message").length) {
         $("#attachments-message").text(m);
     }
     else alert(m);
     }
    }
    XFb.reloadAttachments();
   });
  });
 },
 showLoadingBar: function(on) {
  if (!$("#attachments-loading-bar img").length) {
    $("#attachments-loading-bar").append( $("<img/>").attr("src", "<?php echo $this->baseUrl(); ?>/img/wheel01.gif") );
  }
  if (on) $("#attachments-loading-bar").show();
  else $("#attachments-loading-bar").hide();
 },
 submitUpload: function(on) {
  $("#frmUpload")[0].submit();
  $("#frmUpload")[0].reset();
  XFb.showLoadingBar(1);
 }
};
</script>
<style>
    #attachments_list table {
        border-collapse:collapse;
        border-spacing: 0;
    }
    #attachments_list table td {
        padding:1px 3px;
    }
    #attachments_list table tbody td {
        border-top:1px solid #ddd;
    }
    #attachments_list table thead td {
        background-color:#eee;
    }
    #attachments_list table a {
        color:#2E6E9E;
    }
</style>

<fieldset style="margin:20px 0"><legend><div class="headBemerkungen">Anh√§nge / Pl√§ne:</div></legend>
<?php echo $this->attachments->uploadForm; ?>

<div data-query="" data-baseurl="<?php echo $this->baseUrl(); ?>/touren/attachments/list/tour_id/<?php echo $data['tour_id']; ?>" id="attachments_list">
<?php echo $this->attachments->list; ?>    
</div>
</fieldset>


